/*
* generated by Xtext
*/

package hu.bme.mit.androtext.lang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AndroTextDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AndroTextModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroTextModelRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cActualModelRootAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActualModelRootModelRootParserRuleCall_2_0 = (RuleCall)cActualModelRootAssignment_2.eContents().get(0);
		
		//AndroTextModelRoot:
		//	("package" name=QualifiedName)? imports+=Import* actualModelRoot=ModelRoot;
		public ParserRule getRule() { return rule; }

		//("package" name=QualifiedName)? imports+=Import* actualModelRoot=ModelRoot
		public Group getGroup() { return cGroup; }

		//("package" name=QualifiedName)?
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_1_0() { return cNameQualifiedNameParserRuleCall_0_1_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//Import
		public RuleCall getImportsImportParserRuleCall_1_0() { return cImportsImportParserRuleCall_1_0; }

		//actualModelRoot=ModelRoot
		public Assignment getActualModelRootAssignment_2() { return cActualModelRootAssignment_2; }

		//ModelRoot
		public RuleCall getActualModelRootModelRootParserRuleCall_2_0() { return cActualModelRootModelRootParserRuleCall_2_0; }
	}

	public class ModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelRoot");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAndroGenModelRootParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAndroidApplicationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAndroGuiModelRootParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAndroDataModelRootParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAndroResModelRootParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ModelRoot:
		//	AndroGenModelRoot | AndroidApplication | AndroGuiModelRoot | AndroDataModelRoot | AndroResModelRoot;
		public ParserRule getRule() { return rule; }

		//AndroGenModelRoot | AndroidApplication | AndroGuiModelRoot | AndroDataModelRoot | AndroResModelRoot
		public Alternatives getAlternatives() { return cAlternatives; }

		//AndroGenModelRoot
		public RuleCall getAndroGenModelRootParserRuleCall_0() { return cAndroGenModelRootParserRuleCall_0; }

		//AndroidApplication
		public RuleCall getAndroidApplicationParserRuleCall_1() { return cAndroidApplicationParserRuleCall_1; }

		//AndroGuiModelRoot
		public RuleCall getAndroGuiModelRootParserRuleCall_2() { return cAndroGuiModelRootParserRuleCall_2; }

		//AndroDataModelRoot
		public RuleCall getAndroDataModelRootParserRuleCall_3() { return cAndroDataModelRootParserRuleCall_3; }

		//AndroResModelRoot
		public RuleCall getAndroResModelRootParserRuleCall_4() { return cAndroResModelRootParserRuleCall_4; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		/// * Common language elements * / Import:
		//	"import" importedNamespace=QualifiedNameWithWildCard;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedNameWithWildCard
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedNameWithWildCard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildCard
		public RuleCall getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QualifiedNameWithWildCardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildCard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//QualifiedNameWithWildCard:
		//	QualifiedName ("." "*")?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ("." "*")?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//("." "*")?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//"*"
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}

	public class AndroGenModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroGenModelRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeneratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetApplicationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTargetApplicationsTargetApplicationParserRuleCall_3_0 = (RuleCall)cTargetApplicationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// * End of Common language elements * / / * AndroGenModelRoot and model elements * / AndroGenModelRoot:
		//	"generator" name=ID "{" targetApplications+=TargetApplication* "}";
		public ParserRule getRule() { return rule; }

		//"generator" name=ID "{" targetApplications+=TargetApplication* "}"
		public Group getGroup() { return cGroup; }

		//"generator"
		public Keyword getGeneratorKeyword_0() { return cGeneratorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//targetApplications+=TargetApplication*
		public Assignment getTargetApplicationsAssignment_3() { return cTargetApplicationsAssignment_3; }

		//TargetApplication
		public RuleCall getTargetApplicationsTargetApplicationParserRuleCall_3_0() { return cTargetApplicationsTargetApplicationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class TargetApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TargetApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cApplicationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cApplicationAndroidApplicationCrossReference_1_0 = (CrossReference)cApplicationAssignment_1.eContents().get(0);
		private final RuleCall cApplicationAndroidApplicationQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cApplicationAndroidApplicationCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cProjectKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProjectNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cProjectNameQualifiedNameParserRuleCall_4_0 = (RuleCall)cProjectNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPackageKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPackageNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPackageNameAndroidPackageNameParserRuleCall_5_1_0 = (RuleCall)cPackageNameAssignment_5_1.eContents().get(0);
		private final Keyword cPlatformKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTargetAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTargetApiLevelEnumRuleCall_7_0 = (RuleCall)cTargetAssignment_7.eContents().get(0);
		private final Keyword cVersionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cVersionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final Keyword cVersionRightCurlyBracketKeyword_9_0 = (Keyword)cVersionAssignment_9.eContents().get(0);
		
		//TargetApplication:
		//	"target" application=[AndroidApplication|QualifiedName] "{" "project" projectName=QualifiedName ("package"
		//	packageName=AndroidPackageName)? "platform" target=ApiLevel "version" version="}";
		public ParserRule getRule() { return rule; }

		//"target" application=[AndroidApplication|QualifiedName] "{" "project" projectName=QualifiedName ("package"
		//packageName=AndroidPackageName)? "platform" target=ApiLevel "version" version="}"
		public Group getGroup() { return cGroup; }

		//"target"
		public Keyword getTargetKeyword_0() { return cTargetKeyword_0; }

		//application=[AndroidApplication|QualifiedName]
		public Assignment getApplicationAssignment_1() { return cApplicationAssignment_1; }

		//[AndroidApplication|QualifiedName]
		public CrossReference getApplicationAndroidApplicationCrossReference_1_0() { return cApplicationAndroidApplicationCrossReference_1_0; }

		//QualifiedName
		public RuleCall getApplicationAndroidApplicationQualifiedNameParserRuleCall_1_0_1() { return cApplicationAndroidApplicationQualifiedNameParserRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"project"
		public Keyword getProjectKeyword_3() { return cProjectKeyword_3; }

		//projectName=QualifiedName
		public Assignment getProjectNameAssignment_4() { return cProjectNameAssignment_4; }

		//QualifiedName
		public RuleCall getProjectNameQualifiedNameParserRuleCall_4_0() { return cProjectNameQualifiedNameParserRuleCall_4_0; }

		//("package" packageName=AndroidPackageName)?
		public Group getGroup_5() { return cGroup_5; }

		//"package"
		public Keyword getPackageKeyword_5_0() { return cPackageKeyword_5_0; }

		//packageName=AndroidPackageName
		public Assignment getPackageNameAssignment_5_1() { return cPackageNameAssignment_5_1; }

		//AndroidPackageName
		public RuleCall getPackageNameAndroidPackageNameParserRuleCall_5_1_0() { return cPackageNameAndroidPackageNameParserRuleCall_5_1_0; }

		//"platform"
		public Keyword getPlatformKeyword_6() { return cPlatformKeyword_6; }

		//target=ApiLevel
		public Assignment getTargetAssignment_7() { return cTargetAssignment_7; }

		//ApiLevel
		public RuleCall getTargetApiLevelEnumRuleCall_7_0() { return cTargetApiLevelEnumRuleCall_7_0; }

		//"version"
		public Keyword getVersionKeyword_8() { return cVersionKeyword_8; }

		//version="}"
		public Assignment getVersionAssignment_9() { return cVersionAssignment_9; }

		//"}"
		public Keyword getVersionRightCurlyBracketKeyword_9_0() { return cVersionRightCurlyBracketKeyword_9_0; }
	}

	public class AndroidPackageNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroidPackageName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//AndroidPackageName:
		//	ID ("." ID)+;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)+
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)+
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class AndroidApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroidApplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDatamodelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDatarootAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cDatarootAndroDataModelRootCrossReference_4_0 = (CrossReference)cDatarootAssignment_4.eContents().get(0);
		private final RuleCall cDatarootAndroDataModelRootQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cDatarootAndroDataModelRootCrossReference_4_0.eContents().get(1);
		private final Assignment cMainActivityAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMainActivityActivityParserRuleCall_5_0 = (RuleCall)cMainActivityAssignment_5.eContents().get(0);
		private final Assignment cModelElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cModelElementsAndroidApplicationModelElementParserRuleCall_6_0 = (RuleCall)cModelElementsAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// * End of AndroGenModelRoot and generator model elements * / / * AndroAppModelRoot and model elements * /
		//AndroidApplication:
		//	"application" name=ID "{" "datamodel" dataroot=[AndroDataModelRoot|QualifiedName] mainActivity=Activity
		//	modelElements+=AndroidApplicationModelElement* "}";
		public ParserRule getRule() { return rule; }

		//"application" name=ID "{" "datamodel" dataroot=[AndroDataModelRoot|QualifiedName] mainActivity=Activity
		//modelElements+=AndroidApplicationModelElement* "}"
		public Group getGroup() { return cGroup; }

		//"application"
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"datamodel"
		public Keyword getDatamodelKeyword_3() { return cDatamodelKeyword_3; }

		//dataroot=[AndroDataModelRoot|QualifiedName]
		public Assignment getDatarootAssignment_4() { return cDatarootAssignment_4; }

		//[AndroDataModelRoot|QualifiedName]
		public CrossReference getDatarootAndroDataModelRootCrossReference_4_0() { return cDatarootAndroDataModelRootCrossReference_4_0; }

		//QualifiedName
		public RuleCall getDatarootAndroDataModelRootQualifiedNameParserRuleCall_4_0_1() { return cDatarootAndroDataModelRootQualifiedNameParserRuleCall_4_0_1; }

		//mainActivity=Activity
		public Assignment getMainActivityAssignment_5() { return cMainActivityAssignment_5; }

		//Activity
		public RuleCall getMainActivityActivityParserRuleCall_5_0() { return cMainActivityActivityParserRuleCall_5_0; }

		//modelElements+=AndroidApplicationModelElement*
		public Assignment getModelElementsAssignment_6() { return cModelElementsAssignment_6; }

		//AndroidApplicationModelElement
		public RuleCall getModelElementsAndroidApplicationModelElementParserRuleCall_6_0() { return cModelElementsAndroidApplicationModelElementParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class AndroidApplicationModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroidApplicationModelElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActivityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTabActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AndroidApplicationModelElement:
		//	Activity | TabActivity;
		public ParserRule getRule() { return rule; }

		//Activity | TabActivity
		public Alternatives getAlternatives() { return cAlternatives; }

		//Activity
		public RuleCall getActivityParserRuleCall_0() { return cActivityParserRuleCall_0; }

		//TabActivity
		public RuleCall getTabActivityParserRuleCall_1() { return cTabActivityParserRuleCall_1; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLayoutKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLayoutAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLayoutRootLayoutCrossReference_3_0 = (CrossReference)cLayoutAssignment_3.eContents().get(0);
		private final RuleCall cLayoutRootLayoutQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cLayoutRootLayoutCrossReference_3_0.eContents().get(1);
		
		//Activity:
		//	"activity" name=ID "layout" layout=[RootLayout|QualifiedName];
		public ParserRule getRule() { return rule; }

		//"activity" name=ID "layout" layout=[RootLayout|QualifiedName]
		public Group getGroup() { return cGroup; }

		//"activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"layout"
		public Keyword getLayoutKeyword_2() { return cLayoutKeyword_2; }

		//layout=[RootLayout|QualifiedName]
		public Assignment getLayoutAssignment_3() { return cLayoutAssignment_3; }

		//[RootLayout|QualifiedName]
		public CrossReference getLayoutRootLayoutCrossReference_3_0() { return cLayoutRootLayoutCrossReference_3_0; }

		//QualifiedName
		public RuleCall getLayoutRootLayoutQualifiedNameParserRuleCall_3_0_1() { return cLayoutRootLayoutQualifiedNameParserRuleCall_3_0_1; }
	}

	public class TabActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TabActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTabactivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//TabActivity:
		//	"tabactivity" name=ID;
		public ParserRule getRule() { return rule; }

		//"tabactivity" name=ID
		public Group getGroup() { return cGroup; }

		//"tabactivity"
		public Keyword getTabactivityKeyword_0() { return cTabactivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class AndroDataModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroDataModelRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatamodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// * End of AndroAppModelRoot and application model elements * / / * AndroDataModelRoot and model elements * /
		//AndroDataModelRoot:
		//	"datamodel" name=ID "{" entities+=Entity* "}";
		public ParserRule getRule() { return rule; }

		//"datamodel" name=ID "{" entities+=Entity* "}"
		public Group getGroup() { return cGroup; }

		//"datamodel"
		public Keyword getDatamodelKeyword_0() { return cDatamodelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeEntityCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeEntityIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeEntityCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesPropertyParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//	"entity" name=ID ("extends" superType=[Entity])? "{" properties+=Property* "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID ("extends" superType=[Entity])? "{" properties+=Property* "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" superType=[Entity])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superType=[Entity]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }

		//[Entity]
		public CrossReference getSuperTypeEntityCrossReference_2_1_0() { return cSuperTypeEntityCrossReference_2_1_0; }

		//ID
		public RuleCall getSuperTypeEntityIDTerminalRuleCall_2_1_0_1() { return cSuperTypeEntityIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_4_0() { return cPropertiesPropertyParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeTypeRefParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//Property:
		//	name=ID ":" type=TypeRef;
		public ParserRule getRule() { return rule; }

		//name=ID ":" type=TypeRef
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//type=TypeRef
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//TypeRef
		public RuleCall getTypeTypeRefParserRuleCall_2_0() { return cTypeTypeRefParserRuleCall_2_0; }
	}

	public class TypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypesRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityTypeRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeRef:
		//	DataTypesRef | EntityTypeRef;
		public ParserRule getRule() { return rule; }

		//DataTypesRef | EntityTypeRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataTypesRef
		public RuleCall getDataTypesRefParserRuleCall_0() { return cDataTypesRefParserRuleCall_0; }

		//EntityTypeRef
		public RuleCall getEntityTypeRefParserRuleCall_1() { return cEntityTypeRefParserRuleCall_1; }
	}

	public class DataTypesRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypesRef");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeDataTypesEnumRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//DataTypesRef:
		//	type=DataTypes;
		public ParserRule getRule() { return rule; }

		//type=DataTypes
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//DataTypes
		public RuleCall getTypeDataTypesEnumRuleCall_0() { return cTypeDataTypesEnumRuleCall_0; }
	}

	public class EntityTypeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityTypeRef");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeEntityCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeEntityQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeEntityCrossReference_0.eContents().get(1);
		
		//EntityTypeRef:
		//	type=[Entity|QualifiedName];
		public ParserRule getRule() { return rule; }

		//type=[Entity|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//[Entity|QualifiedName]
		public CrossReference getTypeEntityCrossReference_0() { return cTypeEntityCrossReference_0; }

		//QualifiedName
		public RuleCall getTypeEntityQualifiedNameParserRuleCall_0_1() { return cTypeEntityQualifiedNameParserRuleCall_0_1; }
	}

	public class AndroGuiModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroGuiModelRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGuimodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRootLayoutAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRootLayoutRootLayoutParserRuleCall_3_0 = (RuleCall)cRootLayoutAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// * End of AndroDataModelRoot and data model elements * / / * AndroGuiModelRoot and model elements * / AndroGuiModelRoot:
		//	"guimodel" name=ID "{" rootLayout+=RootLayout* "}";
		public ParserRule getRule() { return rule; }

		//"guimodel" name=ID "{" rootLayout+=RootLayout* "}"
		public Group getGroup() { return cGroup; }

		//"guimodel"
		public Keyword getGuimodelKeyword_0() { return cGuimodelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//rootLayout+=RootLayout*
		public Assignment getRootLayoutAssignment_3() { return cRootLayoutAssignment_3; }

		//RootLayout
		public RuleCall getRootLayoutRootLayoutParserRuleCall_3_0() { return cRootLayoutRootLayoutParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class UIElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cWidgetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLayoutParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UIElement:
		//	Widget | Layout;
		public ParserRule getRule() { return rule; }

		//Widget | Layout
		public Alternatives getAlternatives() { return cAlternatives; }

		//Widget
		public RuleCall getWidgetParserRuleCall_0() { return cWidgetParserRuleCall_0; }

		//Layout
		public RuleCall getLayoutParserRuleCall_1() { return cLayoutParserRuleCall_1; }
	}

	public class LayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Layout");
		private final RuleCall cRootLayoutParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Layout:
		//	RootLayout;
		public ParserRule getRule() { return rule; }

		//RootLayout
		public RuleCall getRootLayoutParserRuleCall() { return cRootLayoutParserRuleCall; }
	}

	public class RootLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RootLayout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBaseLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPreferenceScreenParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RootLayout:
		//	BaseLayout | PreferenceScreen;
		public ParserRule getRule() { return rule; }

		//BaseLayout | PreferenceScreen
		public Alternatives getAlternatives() { return cAlternatives; }

		//BaseLayout
		public RuleCall getBaseLayoutParserRuleCall_0() { return cBaseLayoutParserRuleCall_0; }

		//PreferenceScreen
		public RuleCall getPreferenceScreenParserRuleCall_1() { return cPreferenceScreenParserRuleCall_1; }
	}

	public class BaseLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BaseLayout");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLinearLayoutParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbsoluteLayoutParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFrameLayoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRelativeLayoutParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//BaseLayout:
		//	LinearLayout | AbsoluteLayout | FrameLayout | RelativeLayout;
		public ParserRule getRule() { return rule; }

		//LinearLayout | AbsoluteLayout | FrameLayout | RelativeLayout
		public Alternatives getAlternatives() { return cAlternatives; }

		//LinearLayout
		public RuleCall getLinearLayoutParserRuleCall_0() { return cLinearLayoutParserRuleCall_0; }

		//AbsoluteLayout
		public RuleCall getAbsoluteLayoutParserRuleCall_1() { return cAbsoluteLayoutParserRuleCall_1; }

		//FrameLayout
		public RuleCall getFrameLayoutParserRuleCall_2() { return cFrameLayoutParserRuleCall_2; }

		//RelativeLayout
		public RuleCall getRelativeLayoutParserRuleCall_3() { return cRelativeLayoutParserRuleCall_3; }
	}

	public class AbsoluteLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbsoluteLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAbsolutelayoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_2_0 = (RuleCall)cLayoutStyleAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsUIElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AbsoluteLayout:
		//	"absolutelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
		public ParserRule getRule() { return rule; }

		//"absolutelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}"
		public Group getGroup() { return cGroup; }

		//"absolutelayout"
		public Keyword getAbsolutelayoutKeyword_0() { return cAbsolutelayoutKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_2() { return cLayoutStyleAssignment_2; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_2_0() { return cLayoutStyleLayoutStyleEnumRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//elements+=UIElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//UIElement
		public RuleCall getElementsUIElementParserRuleCall_4_0() { return cElementsUIElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class LinearLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LinearLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinearlayoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cOrientationAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cOrientationHorizontalKeyword_2_0_0 = (Keyword)cOrientationAssignment_2_0.eContents().get(0);
		private final Keyword cVerticalKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsUIElementParserRuleCall_5_0 = (RuleCall)cElementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LinearLayout:
		//	"linearlayout" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" elements+=UIElement*
		//	"}";
		public ParserRule getRule() { return rule; }

		//"linearlayout" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" elements+=UIElement* "}"
		public Group getGroup() { return cGroup; }

		//"linearlayout"
		public Keyword getLinearlayoutKeyword_0() { return cLinearlayoutKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//(orientation?="horizontal" | "vertical")?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//orientation?="horizontal"
		public Assignment getOrientationAssignment_2_0() { return cOrientationAssignment_2_0; }

		//"horizontal"
		public Keyword getOrientationHorizontalKeyword_2_0_0() { return cOrientationHorizontalKeyword_2_0_0; }

		//"vertical"
		public Keyword getVerticalKeyword_2_1() { return cVerticalKeyword_2_1; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//elements+=UIElement*
		public Assignment getElementsAssignment_5() { return cElementsAssignment_5; }

		//UIElement
		public RuleCall getElementsUIElementParserRuleCall_5_0() { return cElementsUIElementParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class FrameLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FrameLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFramelayoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_2_0 = (RuleCall)cLayoutStyleAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsUIElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FrameLayout:
		//	"framelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
		public ParserRule getRule() { return rule; }

		//"framelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}"
		public Group getGroup() { return cGroup; }

		//"framelayout"
		public Keyword getFramelayoutKeyword_0() { return cFramelayoutKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_2() { return cLayoutStyleAssignment_2; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_2_0() { return cLayoutStyleLayoutStyleEnumRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//elements+=UIElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//UIElement
		public RuleCall getElementsUIElementParserRuleCall_4_0() { return cElementsUIElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RelativeLayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelativeLayout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelativelayoutKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_2_0 = (RuleCall)cLayoutStyleAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsUIElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RelativeLayout:
		//	"relativelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
		public ParserRule getRule() { return rule; }

		//"relativelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}"
		public Group getGroup() { return cGroup; }

		//"relativelayout"
		public Keyword getRelativelayoutKeyword_0() { return cRelativelayoutKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_2() { return cLayoutStyleAssignment_2; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_2_0() { return cLayoutStyleLayoutStyleEnumRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//elements+=UIElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//UIElement
		public RuleCall getElementsUIElementParserRuleCall_4_0() { return cElementsUIElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class WidgetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Widget");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTextViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEditTextParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cButtonParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cListViewParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSpinnerParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRadioGroupParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCheckBoxParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRatingBarParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cToggleButtonParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//Widget:
		//	TextView | EditText | Button | ListView | Spinner | RadioGroup | CheckBox | RatingBar | ToggleButton;
		public ParserRule getRule() { return rule; }

		//TextView | EditText | Button | ListView | Spinner | RadioGroup | CheckBox | RatingBar | ToggleButton
		public Alternatives getAlternatives() { return cAlternatives; }

		//TextView
		public RuleCall getTextViewParserRuleCall_0() { return cTextViewParserRuleCall_0; }

		//EditText
		public RuleCall getEditTextParserRuleCall_1() { return cEditTextParserRuleCall_1; }

		//Button
		public RuleCall getButtonParserRuleCall_2() { return cButtonParserRuleCall_2; }

		//ListView
		public RuleCall getListViewParserRuleCall_3() { return cListViewParserRuleCall_3; }

		//Spinner
		public RuleCall getSpinnerParserRuleCall_4() { return cSpinnerParserRuleCall_4; }

		//RadioGroup
		public RuleCall getRadioGroupParserRuleCall_5() { return cRadioGroupParserRuleCall_5; }

		//CheckBox
		public RuleCall getCheckBoxParserRuleCall_6() { return cCheckBoxParserRuleCall_6; }

		//RatingBar
		public RuleCall getRatingBarParserRuleCall_7() { return cRatingBarParserRuleCall_7; }

		//ToggleButton
		public RuleCall getToggleButtonParserRuleCall_8() { return cToggleButtonParserRuleCall_8; }
	}

	public class TextViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//TextView:
		//	"textview" name=ID? text=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"textview" name=ID? text=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"textview"
		public Keyword getTextviewKeyword_0() { return cTextviewKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class EditTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EditText");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEdittextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//EditText:
		//	"edittext" name=ID? text=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"edittext" name=ID? text=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"edittext"
		public Keyword getEdittextKeyword_0() { return cEdittextKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class ButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Button");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//Button:
		//	"button" name=ID? text=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"button" name=ID? text=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"button"
		public Keyword getButtonKeyword_0() { return cButtonKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class ListViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListviewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_2_0 = (RuleCall)cLayoutStyleAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEntriesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEntriesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cEntriesArrayResourceCrossReference_4_1_0 = (CrossReference)cEntriesAssignment_4_1.eContents().get(0);
		private final RuleCall cEntriesArrayResourceQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cEntriesArrayResourceCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cListitemKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLayoutAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cLayoutLayoutCrossReference_5_1_0 = (CrossReference)cLayoutAssignment_5_1.eContents().get(0);
		private final RuleCall cLayoutLayoutQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cLayoutLayoutCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ListView:
		//	"listview" name=ID layoutStyle=LayoutStyle "{" ("entries" entries=[ArrayResource|QualifiedName])? ("listitem"
		//	layout=[Layout|QualifiedName])? "}";
		public ParserRule getRule() { return rule; }

		//"listview" name=ID layoutStyle=LayoutStyle "{" ("entries" entries=[ArrayResource|QualifiedName])? ("listitem"
		//layout=[Layout|QualifiedName])? "}"
		public Group getGroup() { return cGroup; }

		//"listview"
		public Keyword getListviewKeyword_0() { return cListviewKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_2() { return cLayoutStyleAssignment_2; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_2_0() { return cLayoutStyleLayoutStyleEnumRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("entries" entries=[ArrayResource|QualifiedName])?
		public Group getGroup_4() { return cGroup_4; }

		//"entries"
		public Keyword getEntriesKeyword_4_0() { return cEntriesKeyword_4_0; }

		//entries=[ArrayResource|QualifiedName]
		public Assignment getEntriesAssignment_4_1() { return cEntriesAssignment_4_1; }

		//[ArrayResource|QualifiedName]
		public CrossReference getEntriesArrayResourceCrossReference_4_1_0() { return cEntriesArrayResourceCrossReference_4_1_0; }

		//QualifiedName
		public RuleCall getEntriesArrayResourceQualifiedNameParserRuleCall_4_1_0_1() { return cEntriesArrayResourceQualifiedNameParserRuleCall_4_1_0_1; }

		//("listitem" layout=[Layout|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }

		//"listitem"
		public Keyword getListitemKeyword_5_0() { return cListitemKeyword_5_0; }

		//layout=[Layout|QualifiedName]
		public Assignment getLayoutAssignment_5_1() { return cLayoutAssignment_5_1; }

		//[Layout|QualifiedName]
		public CrossReference getLayoutLayoutCrossReference_5_1_0() { return cLayoutLayoutCrossReference_5_1_0; }

		//QualifiedName
		public RuleCall getLayoutLayoutQualifiedNameParserRuleCall_5_1_0_1() { return cLayoutLayoutQualifiedNameParserRuleCall_5_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SpinnerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Spinner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpinnerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEntriesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEntriesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cEntriesResourceCrossReference_2_1_0 = (CrossReference)cEntriesAssignment_2_1.eContents().get(0);
		private final RuleCall cEntriesResourceQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cEntriesResourceCrossReference_2_1_0.eContents().get(1);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//Spinner:
		//	"spinner" name=ID? ("entries" entries=[Resource|QualifiedName])? layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"spinner" name=ID? ("entries" entries=[Resource|QualifiedName])? layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"spinner"
		public Keyword getSpinnerKeyword_0() { return cSpinnerKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("entries" entries=[Resource|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }

		//"entries"
		public Keyword getEntriesKeyword_2_0() { return cEntriesKeyword_2_0; }

		//entries=[Resource|QualifiedName]
		public Assignment getEntriesAssignment_2_1() { return cEntriesAssignment_2_1; }

		//[Resource|QualifiedName]
		public CrossReference getEntriesResourceCrossReference_2_1_0() { return cEntriesResourceCrossReference_2_1_0; }

		//QualifiedName
		public RuleCall getEntriesResourceQualifiedNameParserRuleCall_2_1_0_1() { return cEntriesResourceQualifiedNameParserRuleCall_2_1_0_1; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class CheckBoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CheckBox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheckboxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//CheckBox:
		//	"checkbox" name=ID? text=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"checkbox" name=ID? text=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"checkbox"
		public Keyword getCheckboxKeyword_0() { return cCheckboxKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class RadioGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadioGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRadiogroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cOrientationAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cOrientationHorizontalKeyword_2_0_0 = (Keyword)cOrientationAssignment_2_0.eContents().get(0);
		private final Keyword cVerticalKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRadiobuttonsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRadiobuttonsRadioButtonParserRuleCall_5_0 = (RuleCall)cRadiobuttonsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RadioGroup:
		//	"radiogroup" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" radiobuttons+=RadioButton+
		//	"}";
		public ParserRule getRule() { return rule; }

		//"radiogroup" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" radiobuttons+=RadioButton+
		//"}"
		public Group getGroup() { return cGroup; }

		//"radiogroup"
		public Keyword getRadiogroupKeyword_0() { return cRadiogroupKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//(orientation?="horizontal" | "vertical")?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//orientation?="horizontal"
		public Assignment getOrientationAssignment_2_0() { return cOrientationAssignment_2_0; }

		//"horizontal"
		public Keyword getOrientationHorizontalKeyword_2_0_0() { return cOrientationHorizontalKeyword_2_0_0; }

		//"vertical"
		public Keyword getVerticalKeyword_2_1() { return cVerticalKeyword_2_1; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//radiobuttons+=RadioButton+
		public Assignment getRadiobuttonsAssignment_5() { return cRadiobuttonsAssignment_5; }

		//RadioButton
		public RuleCall getRadiobuttonsRadioButtonParserRuleCall_5_0() { return cRadiobuttonsRadioButtonParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class RatingBarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RatingBar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRatingbarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cNumStarsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumStarsINTTerminalRuleCall_2_0 = (RuleCall)cNumStarsAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//RatingBar:
		//	"ratingbar" name=ID? numStars=INT layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"ratingbar" name=ID? numStars=INT layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"ratingbar"
		public Keyword getRatingbarKeyword_0() { return cRatingbarKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//numStars=INT
		public Assignment getNumStarsAssignment_2() { return cNumStarsAssignment_2; }

		//INT
		public RuleCall getNumStarsINTTerminalRuleCall_2_0() { return cNumStarsINTTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class ToggleButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ToggleButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTogglebuttonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cTextOnKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTextOnAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTextOnSTRINGTerminalRuleCall_3_0 = (RuleCall)cTextOnAssignment_3.eContents().get(0);
		private final Keyword cTextOffKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTextOffAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTextOffSTRINGTerminalRuleCall_5_0 = (RuleCall)cTextOffAssignment_5.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_6_0 = (RuleCall)cLayoutStyleAssignment_6.eContents().get(0);
		
		//ToggleButton:
		//	"togglebutton" name=ID? "textOn" textOn=STRING "textOff" textOff=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"togglebutton" name=ID? "textOn" textOn=STRING "textOff" textOff=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"togglebutton"
		public Keyword getTogglebuttonKeyword_0() { return cTogglebuttonKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"textOn"
		public Keyword getTextOnKeyword_2() { return cTextOnKeyword_2; }

		//textOn=STRING
		public Assignment getTextOnAssignment_3() { return cTextOnAssignment_3; }

		//STRING
		public RuleCall getTextOnSTRINGTerminalRuleCall_3_0() { return cTextOnSTRINGTerminalRuleCall_3_0; }

		//"textOff"
		public Keyword getTextOffKeyword_4() { return cTextOffKeyword_4; }

		//textOff=STRING
		public Assignment getTextOffAssignment_5() { return cTextOffAssignment_5; }

		//STRING
		public RuleCall getTextOffSTRINGTerminalRuleCall_5_0() { return cTextOffSTRINGTerminalRuleCall_5_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_6() { return cLayoutStyleAssignment_6; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_6_0() { return cLayoutStyleLayoutStyleEnumRuleCall_6_0; }
	}

	public class RadioButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadioButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRadiobuttonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Assignment cLayoutStyleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutStyleLayoutStyleEnumRuleCall_3_0 = (RuleCall)cLayoutStyleAssignment_3.eContents().get(0);
		
		//RadioButton:
		//	"radiobutton" name=ID? text=STRING layoutStyle=LayoutStyle;
		public ParserRule getRule() { return rule; }

		//"radiobutton" name=ID? text=STRING layoutStyle=LayoutStyle
		public Group getGroup() { return cGroup; }

		//"radiobutton"
		public Keyword getRadiobuttonKeyword_0() { return cRadiobuttonKeyword_0; }

		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }

		//layoutStyle=LayoutStyle
		public Assignment getLayoutStyleAssignment_3() { return cLayoutStyleAssignment_3; }

		//LayoutStyle
		public RuleCall getLayoutStyleLayoutStyleEnumRuleCall_3_0() { return cLayoutStyleLayoutStyleEnumRuleCall_3_0; }
	}

	public class PreferenceScreenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PreferenceScreen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPreferencescreenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTitleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_0 = (RuleCall)cTitleAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PreferenceScreen:
		//	"preferencescreen" name=ID title=STRING "{" "}";
		public ParserRule getRule() { return rule; }

		//"preferencescreen" name=ID title=STRING "{" "}"
		public Group getGroup() { return cGroup; }

		//"preferencescreen"
		public Keyword getPreferencescreenKeyword_0() { return cPreferencescreenKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//title=STRING
		public Assignment getTitleAssignment_2() { return cTitleAssignment_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_0() { return cTitleSTRINGTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class AndroResModelRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroResModelRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourcesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResourcesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResourcesResourceParserRuleCall_3_0 = (RuleCall)cResourcesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// * End of AndroGuiModelRoot and gui model elements * / / * AndroRes ModelRoot and model elements * / AndroResModelRoot:
		//	"resources" name=ID "{" resources+=Resource* "}";
		public ParserRule getRule() { return rule; }

		//"resources" name=ID "{" resources+=Resource* "}"
		public Group getGroup() { return cGroup; }

		//"resources"
		public Keyword getResourcesKeyword_0() { return cResourcesKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//resources+=Resource*
		public Assignment getResourcesAssignment_3() { return cResourcesAssignment_3; }

		//Resource
		public RuleCall getResourcesResourceParserRuleCall_3_0() { return cResourcesResourceParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntegerResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanResourceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cColorResourceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDimensionResourceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cArrayResourceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDrawableResourceParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Resource:
		//	StringResource | IntegerResource | BooleanResource | ColorResource | DimensionResource | ArrayResource |
		//	DrawableResource;
		public ParserRule getRule() { return rule; }

		//StringResource | IntegerResource | BooleanResource | ColorResource | DimensionResource | ArrayResource |
		//DrawableResource
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringResource
		public RuleCall getStringResourceParserRuleCall_0() { return cStringResourceParserRuleCall_0; }

		//IntegerResource
		public RuleCall getIntegerResourceParserRuleCall_1() { return cIntegerResourceParserRuleCall_1; }

		//BooleanResource
		public RuleCall getBooleanResourceParserRuleCall_2() { return cBooleanResourceParserRuleCall_2; }

		//ColorResource
		public RuleCall getColorResourceParserRuleCall_3() { return cColorResourceParserRuleCall_3; }

		//DimensionResource
		public RuleCall getDimensionResourceParserRuleCall_4() { return cDimensionResourceParserRuleCall_4; }

		//ArrayResource
		public RuleCall getArrayResourceParserRuleCall_5() { return cArrayResourceParserRuleCall_5; }

		//DrawableResource
		public RuleCall getDrawableResourceParserRuleCall_6() { return cDrawableResourceParserRuleCall_6; }
	}

	public class StringResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//StringResource:
		//	name=ID "=" value=STRING;
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=STRING
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class IntegerResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueINTTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//IntegerResource:
		//	name=ID "=" value=INT;
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=INT
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=INT
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_2_0() { return cValueINTTerminalRuleCall_2_0; }
	}

	public class BooleanResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueBOOLParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//BooleanResource:
		//	name=ID "=" value=BOOL;
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=BOOL
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=BOOL
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//BOOL
		public RuleCall getValueBOOLParserRuleCall_2_0() { return cValueBOOLParserRuleCall_2_0; }
	}

	public class ColorResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ColorResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueHEX_COLORTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ColorResource:
		//	name=ID "=" value=HEX_COLOR;
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=HEX_COLOR
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=HEX_COLOR
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//HEX_COLOR
		public RuleCall getValueHEX_COLORTerminalRuleCall_2_0() { return cValueHEX_COLORTerminalRuleCall_2_0; }
	}

	public class DimensionResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DimensionResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueDimensionValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//DimensionResource:
		//	name=ID "=" value=DimensionValue;
		public ParserRule getRule() { return rule; }

		//name=ID "=" value=DimensionValue
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=DimensionValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//DimensionValue
		public RuleCall getValueDimensionValueParserRuleCall_2_0() { return cValueDimensionValueParserRuleCall_2_0; }
	}

	public class ArrayResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArrayResource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntegerArrayResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringArrayResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ArrayResource:
		//	IntegerArrayResource | StringArrayResource;
		public ParserRule getRule() { return rule; }

		//IntegerArrayResource | StringArrayResource
		public Alternatives getAlternatives() { return cAlternatives; }

		//IntegerArrayResource
		public RuleCall getIntegerArrayResourceParserRuleCall_0() { return cIntegerArrayResourceParserRuleCall_0; }

		//StringArrayResource
		public RuleCall getStringArrayResourceParserRuleCall_1() { return cStringArrayResourceParserRuleCall_1; }
	}

	public class IntegerArrayResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerArrayResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntarrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cEntriesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cEntriesIntegerArrayEntryParserRuleCall_3_0_0 = (RuleCall)cEntriesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntriesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEntriesIntegerArrayEntryParserRuleCall_3_1_1_0 = (RuleCall)cEntriesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//IntegerArrayResource:
		//	"intarray" name=ID "{" (entries+=IntegerArrayEntry ("," entries+=IntegerArrayEntry)*) "}";
		public ParserRule getRule() { return rule; }

		//"intarray" name=ID "{" (entries+=IntegerArrayEntry ("," entries+=IntegerArrayEntry)*) "}"
		public Group getGroup() { return cGroup; }

		//"intarray"
		public Keyword getIntarrayKeyword_0() { return cIntarrayKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entries+=IntegerArrayEntry ("," entries+=IntegerArrayEntry)*
		public Group getGroup_3() { return cGroup_3; }

		//entries+=IntegerArrayEntry
		public Assignment getEntriesAssignment_3_0() { return cEntriesAssignment_3_0; }

		//IntegerArrayEntry
		public RuleCall getEntriesIntegerArrayEntryParserRuleCall_3_0_0() { return cEntriesIntegerArrayEntryParserRuleCall_3_0_0; }

		//("," entries+=IntegerArrayEntry)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//entries+=IntegerArrayEntry
		public Assignment getEntriesAssignment_3_1_1() { return cEntriesAssignment_3_1_1; }

		//IntegerArrayEntry
		public RuleCall getEntriesIntegerArrayEntryParserRuleCall_3_1_1_0() { return cEntriesIntegerArrayEntryParserRuleCall_3_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class IntegerArrayEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerArrayEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//IntegerArrayEntry:
		//	(name=ID "=")? value=INT;
		public ParserRule getRule() { return rule; }

		//(name=ID "=")? value=INT
		public Group getGroup() { return cGroup; }

		//(name=ID "=")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }
	}

	public class StringArrayResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringArrayResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStringarrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cEntriesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cEntriesStringArrayEntryParserRuleCall_3_0_0 = (RuleCall)cEntriesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cEntriesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cEntriesStringArrayEntryParserRuleCall_3_1_1_0 = (RuleCall)cEntriesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StringArrayResource:
		//	"stringarray" name=ID "{" (entries+=StringArrayEntry ("," entries+=StringArrayEntry)*) "}";
		public ParserRule getRule() { return rule; }

		//"stringarray" name=ID "{" (entries+=StringArrayEntry ("," entries+=StringArrayEntry)*) "}"
		public Group getGroup() { return cGroup; }

		//"stringarray"
		public Keyword getStringarrayKeyword_0() { return cStringarrayKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entries+=StringArrayEntry ("," entries+=StringArrayEntry)*
		public Group getGroup_3() { return cGroup_3; }

		//entries+=StringArrayEntry
		public Assignment getEntriesAssignment_3_0() { return cEntriesAssignment_3_0; }

		//StringArrayEntry
		public RuleCall getEntriesStringArrayEntryParserRuleCall_3_0_0() { return cEntriesStringArrayEntryParserRuleCall_3_0_0; }

		//("," entries+=StringArrayEntry)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//entries+=StringArrayEntry
		public Assignment getEntriesAssignment_3_1_1() { return cEntriesAssignment_3_1_1; }

		//StringArrayEntry
		public RuleCall getEntriesStringArrayEntryParserRuleCall_3_1_1_0() { return cEntriesStringArrayEntryParserRuleCall_3_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class StringArrayEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringArrayEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//StringArrayEntry:
		//	(name=ID "=")? value=STRING;
		public ParserRule getRule() { return rule; }

		//(name=ID "=")? value=STRING
		public Group getGroup() { return cGroup; }

		//(name=ID "=")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class DrawableResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DrawableResource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBitmapDrawableResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTransitionDrawableResourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DrawableResource:
		//	BitmapDrawableResource | TransitionDrawableResource;
		public ParserRule getRule() { return rule; }

		//BitmapDrawableResource | TransitionDrawableResource
		public Alternatives getAlternatives() { return cAlternatives; }

		//BitmapDrawableResource
		public RuleCall getBitmapDrawableResourceParserRuleCall_0() { return cBitmapDrawableResourceParserRuleCall_0; }

		//TransitionDrawableResource
		public RuleCall getTransitionDrawableResourceParserRuleCall_1() { return cTransitionDrawableResourceParserRuleCall_1; }
	}

	public class BitmapDrawableResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BitmapDrawableResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFilenameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFilenameIDTerminalRuleCall_2_0 = (RuleCall)cFilenameAssignment_2.eContents().get(0);
		
		//BitmapDrawableResource:
		//	name=ID "=" filename=ID;
		public ParserRule getRule() { return rule; }

		//name=ID "=" filename=ID
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//filename=ID
		public Assignment getFilenameAssignment_2() { return cFilenameAssignment_2; }

		//ID
		public RuleCall getFilenameIDTerminalRuleCall_2_0() { return cFilenameIDTerminalRuleCall_2_0; }
	}

	public class TransitionDrawableResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionDrawableResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFromBitmapDrawableResourceCrossReference_1_0 = (CrossReference)cFromAssignment_1.eContents().get(0);
		private final RuleCall cFromBitmapDrawableResourceIDTerminalRuleCall_1_0_1 = (RuleCall)cFromBitmapDrawableResourceCrossReference_1_0.eContents().get(1);
		private final Keyword cLessThanSignHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cToBitmapDrawableResourceCrossReference_3_0 = (CrossReference)cToAssignment_3.eContents().get(0);
		private final RuleCall cToBitmapDrawableResourceIDTerminalRuleCall_3_0_1 = (RuleCall)cToBitmapDrawableResourceCrossReference_3_0.eContents().get(1);
		
		//TransitionDrawableResource:
		//	name=ID from=[BitmapDrawableResource] "<->" to=[BitmapDrawableResource];
		public ParserRule getRule() { return rule; }

		//name=ID from=[BitmapDrawableResource] "<->" to=[BitmapDrawableResource]
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//from=[BitmapDrawableResource]
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//[BitmapDrawableResource]
		public CrossReference getFromBitmapDrawableResourceCrossReference_1_0() { return cFromBitmapDrawableResourceCrossReference_1_0; }

		//ID
		public RuleCall getFromBitmapDrawableResourceIDTerminalRuleCall_1_0_1() { return cFromBitmapDrawableResourceIDTerminalRuleCall_1_0_1; }

		//"<->"
		public Keyword getLessThanSignHyphenMinusGreaterThanSignKeyword_2() { return cLessThanSignHyphenMinusGreaterThanSignKeyword_2; }

		//to=[BitmapDrawableResource]
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//[BitmapDrawableResource]
		public CrossReference getToBitmapDrawableResourceCrossReference_3_0() { return cToBitmapDrawableResourceCrossReference_3_0; }

		//ID
		public RuleCall getToBitmapDrawableResourceIDTerminalRuleCall_3_0_1() { return cToBitmapDrawableResourceIDTerminalRuleCall_3_0_1; }
	}

	public class DimensionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DimensionValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cDpKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cSpKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cPtKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Keyword cPxKeyword_1_3 = (Keyword)cAlternatives_1.eContents().get(3);
		private final Keyword cMmKeyword_1_4 = (Keyword)cAlternatives_1.eContents().get(4);
		private final Keyword cInKeyword_1_5 = (Keyword)cAlternatives_1.eContents().get(5);
		
		//DimensionValue:
		//	FLOAT ("dp" | "sp" | "pt" | "px" | "mm" | "in");
		public ParserRule getRule() { return rule; }

		//FLOAT ("dp" | "sp" | "pt" | "px" | "mm" | "in")
		public Group getGroup() { return cGroup; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_0() { return cFLOATParserRuleCall_0; }

		//"dp" | "sp" | "pt" | "px" | "mm" | "in"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"dp"
		public Keyword getDpKeyword_1_0() { return cDpKeyword_1_0; }

		//"sp"
		public Keyword getSpKeyword_1_1() { return cSpKeyword_1_1; }

		//"pt"
		public Keyword getPtKeyword_1_2() { return cPtKeyword_1_2; }

		//"px"
		public Keyword getPxKeyword_1_3() { return cPxKeyword_1_3; }

		//"mm"
		public Keyword getMmKeyword_1_4() { return cMmKeyword_1_4; }

		//"in"
		public Keyword getInKeyword_1_5() { return cInKeyword_1_5; }
	}

	public class BOOLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BOOL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cYESKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNOKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BOOL:
		//	"YES" | "NO";
		public ParserRule getRule() { return rule; }

		//"YES" | "NO"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"YES"
		public Keyword getYESKeyword_0() { return cYESKeyword_0; }

		//"NO"
		public Keyword getNOKeyword_1() { return cNOKeyword_1; }
	}

	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FLOAT:
		//	INT ("." INT)?;
		public ParserRule getRule() { return rule; }

		//INT ("." INT)?
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//("." INT)?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}
	
	
	public class ApiLevelElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ApiLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAPI8EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAPI8Android22Keyword_0_0 = (Keyword)cAPI8EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAPI9EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAPI9Android231Keyword_1_0 = (Keyword)cAPI9EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAPI10EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAPI10Android233Keyword_2_0 = (Keyword)cAPI10EnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAPI11EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAPI11Android30Keyword_3_0 = (Keyword)cAPI11EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cAPI12EnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cAPI12Android31Keyword_4_0 = (Keyword)cAPI12EnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAPI14EnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAPI14Android40Keyword_5_0 = (Keyword)cAPI14EnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ApiLevel:
		//	API8="Android 2.2" | API9="Android 2.3.1" | API10="Android 2.3.3" | API11="Android 3.0" | API12="Android 3.1" |
		//	API14="Android 4.0";
		public EnumRule getRule() { return rule; }

		//API8="Android 2.2" | API9="Android 2.3.1" | API10="Android 2.3.3" | API11="Android 3.0" | API12="Android 3.1" |
		//API14="Android 4.0"
		public Alternatives getAlternatives() { return cAlternatives; }

		//API8="Android 2.2"
		public EnumLiteralDeclaration getAPI8EnumLiteralDeclaration_0() { return cAPI8EnumLiteralDeclaration_0; }

		//"Android 2.2"
		public Keyword getAPI8Android22Keyword_0_0() { return cAPI8Android22Keyword_0_0; }

		//API9="Android 2.3.1"
		public EnumLiteralDeclaration getAPI9EnumLiteralDeclaration_1() { return cAPI9EnumLiteralDeclaration_1; }

		//"Android 2.3.1"
		public Keyword getAPI9Android231Keyword_1_0() { return cAPI9Android231Keyword_1_0; }

		//API10="Android 2.3.3"
		public EnumLiteralDeclaration getAPI10EnumLiteralDeclaration_2() { return cAPI10EnumLiteralDeclaration_2; }

		//"Android 2.3.3"
		public Keyword getAPI10Android233Keyword_2_0() { return cAPI10Android233Keyword_2_0; }

		//API11="Android 3.0"
		public EnumLiteralDeclaration getAPI11EnumLiteralDeclaration_3() { return cAPI11EnumLiteralDeclaration_3; }

		//"Android 3.0"
		public Keyword getAPI11Android30Keyword_3_0() { return cAPI11Android30Keyword_3_0; }

		//API12="Android 3.1"
		public EnumLiteralDeclaration getAPI12EnumLiteralDeclaration_4() { return cAPI12EnumLiteralDeclaration_4; }

		//"Android 3.1"
		public Keyword getAPI12Android31Keyword_4_0() { return cAPI12Android31Keyword_4_0; }

		//API14="Android 4.0"
		public EnumLiteralDeclaration getAPI14EnumLiteralDeclaration_5() { return cAPI14EnumLiteralDeclaration_5; }

		//"Android 4.0"
		public Keyword getAPI14Android40Keyword_5_0() { return cAPI14Android40Keyword_5_0; }
	}

	public class DataTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRINGStringKeyword_0_0 = (Keyword)cSTRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFLOATFloatKeyword_1_0 = (Keyword)cFLOATEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLEANBooleanKeyword_2_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINTIntKeyword_3_0 = (Keyword)cINTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DataTypes:
		//	STRING="String" | FLOAT="float" | BOOLEAN="boolean" | INT="int";
		public EnumRule getRule() { return rule; }

		//STRING="String" | FLOAT="float" | BOOLEAN="boolean" | INT="int"
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING="String"
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_0() { return cSTRINGEnumLiteralDeclaration_0; }

		//"String"
		public Keyword getSTRINGStringKeyword_0_0() { return cSTRINGStringKeyword_0_0; }

		//FLOAT="float"
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_1() { return cFLOATEnumLiteralDeclaration_1; }

		//"float"
		public Keyword getFLOATFloatKeyword_1_0() { return cFLOATFloatKeyword_1_0; }

		//BOOLEAN="boolean"
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_2() { return cBOOLEANEnumLiteralDeclaration_2; }

		//"boolean"
		public Keyword getBOOLEANBooleanKeyword_2_0() { return cBOOLEANBooleanKeyword_2_0; }

		//INT="int"
		public EnumLiteralDeclaration getINTEnumLiteralDeclaration_3() { return cINTEnumLiteralDeclaration_3; }

		//"int"
		public Keyword getINTIntKeyword_3_0() { return cINTIntKeyword_3_0; }
	}

	public class LayoutStyleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "LayoutStyle");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFILLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFILLFillKeyword_0_0 = (Keyword)cFILLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWRAPEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWRAPWrapKeyword_1_0 = (Keyword)cWRAPEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFILL_WRAPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFILL_WRAPFillWrapKeyword_2_0 = (Keyword)cFILL_WRAPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWRAP_FILLEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWRAP_FILLWrapFillKeyword_3_0 = (Keyword)cWRAP_FILLEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum LayoutStyle:
		//	FILL="fill" | WRAP="wrap" | FILL_WRAP="fill&wrap" | WRAP_FILL="wrap&fill";
		public EnumRule getRule() { return rule; }

		//FILL="fill" | WRAP="wrap" | FILL_WRAP="fill&wrap" | WRAP_FILL="wrap&fill"
		public Alternatives getAlternatives() { return cAlternatives; }

		//FILL="fill"
		public EnumLiteralDeclaration getFILLEnumLiteralDeclaration_0() { return cFILLEnumLiteralDeclaration_0; }

		//"fill"
		public Keyword getFILLFillKeyword_0_0() { return cFILLFillKeyword_0_0; }

		//WRAP="wrap"
		public EnumLiteralDeclaration getWRAPEnumLiteralDeclaration_1() { return cWRAPEnumLiteralDeclaration_1; }

		//"wrap"
		public Keyword getWRAPWrapKeyword_1_0() { return cWRAPWrapKeyword_1_0; }

		//FILL_WRAP="fill&wrap"
		public EnumLiteralDeclaration getFILL_WRAPEnumLiteralDeclaration_2() { return cFILL_WRAPEnumLiteralDeclaration_2; }

		//"fill&wrap"
		public Keyword getFILL_WRAPFillWrapKeyword_2_0() { return cFILL_WRAPFillWrapKeyword_2_0; }

		//WRAP_FILL="wrap&fill"
		public EnumLiteralDeclaration getWRAP_FILLEnumLiteralDeclaration_3() { return cWRAP_FILLEnumLiteralDeclaration_3; }

		//"wrap&fill"
		public Keyword getWRAP_FILLWrapFillKeyword_3_0() { return cWRAP_FILLWrapFillKeyword_3_0; }
	}
	
	private AndroTextModelRootElements pAndroTextModelRoot;
	private ModelRootElements pModelRoot;
	private ImportElements pImport;
	private QualifiedNameElements pQualifiedName;
	private QualifiedNameWithWildCardElements pQualifiedNameWithWildCard;
	private AndroGenModelRootElements pAndroGenModelRoot;
	private TargetApplicationElements pTargetApplication;
	private AndroidPackageNameElements pAndroidPackageName;
	private ApiLevelElements unknownRuleApiLevel;
	private AndroidApplicationElements pAndroidApplication;
	private AndroidApplicationModelElementElements pAndroidApplicationModelElement;
	private ActivityElements pActivity;
	private TabActivityElements pTabActivity;
	private AndroDataModelRootElements pAndroDataModelRoot;
	private EntityElements pEntity;
	private PropertyElements pProperty;
	private TypeRefElements pTypeRef;
	private DataTypesRefElements pDataTypesRef;
	private EntityTypeRefElements pEntityTypeRef;
	private DataTypesElements unknownRuleDataTypes;
	private AndroGuiModelRootElements pAndroGuiModelRoot;
	private UIElementElements pUIElement;
	private LayoutElements pLayout;
	private RootLayoutElements pRootLayout;
	private BaseLayoutElements pBaseLayout;
	private LayoutStyleElements unknownRuleLayoutStyle;
	private AbsoluteLayoutElements pAbsoluteLayout;
	private LinearLayoutElements pLinearLayout;
	private FrameLayoutElements pFrameLayout;
	private RelativeLayoutElements pRelativeLayout;
	private WidgetElements pWidget;
	private TextViewElements pTextView;
	private EditTextElements pEditText;
	private ButtonElements pButton;
	private ListViewElements pListView;
	private SpinnerElements pSpinner;
	private CheckBoxElements pCheckBox;
	private RadioGroupElements pRadioGroup;
	private RatingBarElements pRatingBar;
	private ToggleButtonElements pToggleButton;
	private RadioButtonElements pRadioButton;
	private PreferenceScreenElements pPreferenceScreen;
	private AndroResModelRootElements pAndroResModelRoot;
	private ResourceElements pResource;
	private StringResourceElements pStringResource;
	private IntegerResourceElements pIntegerResource;
	private BooleanResourceElements pBooleanResource;
	private ColorResourceElements pColorResource;
	private DimensionResourceElements pDimensionResource;
	private ArrayResourceElements pArrayResource;
	private IntegerArrayResourceElements pIntegerArrayResource;
	private IntegerArrayEntryElements pIntegerArrayEntry;
	private StringArrayResourceElements pStringArrayResource;
	private StringArrayEntryElements pStringArrayEntry;
	private DrawableResourceElements pDrawableResource;
	private BitmapDrawableResourceElements pBitmapDrawableResource;
	private TransitionDrawableResourceElements pTransitionDrawableResource;
	private DimensionValueElements pDimensionValue;
	private BOOLElements pBOOL;
	private FLOATElements pFLOAT;
	private TerminalRule tHEX_COLOR;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public AndroTextDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AndroTextModelRoot:
	//	("package" name=QualifiedName)? imports+=Import* actualModelRoot=ModelRoot;
	public AndroTextModelRootElements getAndroTextModelRootAccess() {
		return (pAndroTextModelRoot != null) ? pAndroTextModelRoot : (pAndroTextModelRoot = new AndroTextModelRootElements());
	}
	
	public ParserRule getAndroTextModelRootRule() {
		return getAndroTextModelRootAccess().getRule();
	}

	//ModelRoot:
	//	AndroGenModelRoot | AndroidApplication | AndroGuiModelRoot | AndroDataModelRoot | AndroResModelRoot;
	public ModelRootElements getModelRootAccess() {
		return (pModelRoot != null) ? pModelRoot : (pModelRoot = new ModelRootElements());
	}
	
	public ParserRule getModelRootRule() {
		return getModelRootAccess().getRule();
	}

	/// * Common language elements * / Import:
	//	"import" importedNamespace=QualifiedNameWithWildCard;
	public ImportElements getImportAccess() {
		return (pImport != null) ? pImport : (pImport = new ImportElements());
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//QualifiedNameWithWildCard:
	//	QualifiedName ("." "*")?;
	public QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return (pQualifiedNameWithWildCard != null) ? pQualifiedNameWithWildCard : (pQualifiedNameWithWildCard = new QualifiedNameWithWildCardElements());
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	/// * End of Common language elements * / / * AndroGenModelRoot and model elements * / AndroGenModelRoot:
	//	"generator" name=ID "{" targetApplications+=TargetApplication* "}";
	public AndroGenModelRootElements getAndroGenModelRootAccess() {
		return (pAndroGenModelRoot != null) ? pAndroGenModelRoot : (pAndroGenModelRoot = new AndroGenModelRootElements());
	}
	
	public ParserRule getAndroGenModelRootRule() {
		return getAndroGenModelRootAccess().getRule();
	}

	//TargetApplication:
	//	"target" application=[AndroidApplication|QualifiedName] "{" "project" projectName=QualifiedName ("package"
	//	packageName=AndroidPackageName)? "platform" target=ApiLevel "version" version="}";
	public TargetApplicationElements getTargetApplicationAccess() {
		return (pTargetApplication != null) ? pTargetApplication : (pTargetApplication = new TargetApplicationElements());
	}
	
	public ParserRule getTargetApplicationRule() {
		return getTargetApplicationAccess().getRule();
	}

	//AndroidPackageName:
	//	ID ("." ID)+;
	public AndroidPackageNameElements getAndroidPackageNameAccess() {
		return (pAndroidPackageName != null) ? pAndroidPackageName : (pAndroidPackageName = new AndroidPackageNameElements());
	}
	
	public ParserRule getAndroidPackageNameRule() {
		return getAndroidPackageNameAccess().getRule();
	}

	//enum ApiLevel:
	//	API8="Android 2.2" | API9="Android 2.3.1" | API10="Android 2.3.3" | API11="Android 3.0" | API12="Android 3.1" |
	//	API14="Android 4.0";
	public ApiLevelElements getApiLevelAccess() {
		return (unknownRuleApiLevel != null) ? unknownRuleApiLevel : (unknownRuleApiLevel = new ApiLevelElements());
	}
	
	public EnumRule getApiLevelRule() {
		return getApiLevelAccess().getRule();
	}

	/// * End of AndroGenModelRoot and generator model elements * / / * AndroAppModelRoot and model elements * /
	//AndroidApplication:
	//	"application" name=ID "{" "datamodel" dataroot=[AndroDataModelRoot|QualifiedName] mainActivity=Activity
	//	modelElements+=AndroidApplicationModelElement* "}";
	public AndroidApplicationElements getAndroidApplicationAccess() {
		return (pAndroidApplication != null) ? pAndroidApplication : (pAndroidApplication = new AndroidApplicationElements());
	}
	
	public ParserRule getAndroidApplicationRule() {
		return getAndroidApplicationAccess().getRule();
	}

	//AndroidApplicationModelElement:
	//	Activity | TabActivity;
	public AndroidApplicationModelElementElements getAndroidApplicationModelElementAccess() {
		return (pAndroidApplicationModelElement != null) ? pAndroidApplicationModelElement : (pAndroidApplicationModelElement = new AndroidApplicationModelElementElements());
	}
	
	public ParserRule getAndroidApplicationModelElementRule() {
		return getAndroidApplicationModelElementAccess().getRule();
	}

	//Activity:
	//	"activity" name=ID "layout" layout=[RootLayout|QualifiedName];
	public ActivityElements getActivityAccess() {
		return (pActivity != null) ? pActivity : (pActivity = new ActivityElements());
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//TabActivity:
	//	"tabactivity" name=ID;
	public TabActivityElements getTabActivityAccess() {
		return (pTabActivity != null) ? pTabActivity : (pTabActivity = new TabActivityElements());
	}
	
	public ParserRule getTabActivityRule() {
		return getTabActivityAccess().getRule();
	}

	/// * End of AndroAppModelRoot and application model elements * / / * AndroDataModelRoot and model elements * /
	//AndroDataModelRoot:
	//	"datamodel" name=ID "{" entities+=Entity* "}";
	public AndroDataModelRootElements getAndroDataModelRootAccess() {
		return (pAndroDataModelRoot != null) ? pAndroDataModelRoot : (pAndroDataModelRoot = new AndroDataModelRootElements());
	}
	
	public ParserRule getAndroDataModelRootRule() {
		return getAndroDataModelRootAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID ("extends" superType=[Entity])? "{" properties+=Property* "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Property:
	//	name=ID ":" type=TypeRef;
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//TypeRef:
	//	DataTypesRef | EntityTypeRef;
	public TypeRefElements getTypeRefAccess() {
		return (pTypeRef != null) ? pTypeRef : (pTypeRef = new TypeRefElements());
	}
	
	public ParserRule getTypeRefRule() {
		return getTypeRefAccess().getRule();
	}

	//DataTypesRef:
	//	type=DataTypes;
	public DataTypesRefElements getDataTypesRefAccess() {
		return (pDataTypesRef != null) ? pDataTypesRef : (pDataTypesRef = new DataTypesRefElements());
	}
	
	public ParserRule getDataTypesRefRule() {
		return getDataTypesRefAccess().getRule();
	}

	//EntityTypeRef:
	//	type=[Entity|QualifiedName];
	public EntityTypeRefElements getEntityTypeRefAccess() {
		return (pEntityTypeRef != null) ? pEntityTypeRef : (pEntityTypeRef = new EntityTypeRefElements());
	}
	
	public ParserRule getEntityTypeRefRule() {
		return getEntityTypeRefAccess().getRule();
	}

	//enum DataTypes:
	//	STRING="String" | FLOAT="float" | BOOLEAN="boolean" | INT="int";
	public DataTypesElements getDataTypesAccess() {
		return (unknownRuleDataTypes != null) ? unknownRuleDataTypes : (unknownRuleDataTypes = new DataTypesElements());
	}
	
	public EnumRule getDataTypesRule() {
		return getDataTypesAccess().getRule();
	}

	/// * End of AndroDataModelRoot and data model elements * / / * AndroGuiModelRoot and model elements * / AndroGuiModelRoot:
	//	"guimodel" name=ID "{" rootLayout+=RootLayout* "}";
	public AndroGuiModelRootElements getAndroGuiModelRootAccess() {
		return (pAndroGuiModelRoot != null) ? pAndroGuiModelRoot : (pAndroGuiModelRoot = new AndroGuiModelRootElements());
	}
	
	public ParserRule getAndroGuiModelRootRule() {
		return getAndroGuiModelRootAccess().getRule();
	}

	//UIElement:
	//	Widget | Layout;
	public UIElementElements getUIElementAccess() {
		return (pUIElement != null) ? pUIElement : (pUIElement = new UIElementElements());
	}
	
	public ParserRule getUIElementRule() {
		return getUIElementAccess().getRule();
	}

	//Layout:
	//	RootLayout;
	public LayoutElements getLayoutAccess() {
		return (pLayout != null) ? pLayout : (pLayout = new LayoutElements());
	}
	
	public ParserRule getLayoutRule() {
		return getLayoutAccess().getRule();
	}

	//RootLayout:
	//	BaseLayout | PreferenceScreen;
	public RootLayoutElements getRootLayoutAccess() {
		return (pRootLayout != null) ? pRootLayout : (pRootLayout = new RootLayoutElements());
	}
	
	public ParserRule getRootLayoutRule() {
		return getRootLayoutAccess().getRule();
	}

	//BaseLayout:
	//	LinearLayout | AbsoluteLayout | FrameLayout | RelativeLayout;
	public BaseLayoutElements getBaseLayoutAccess() {
		return (pBaseLayout != null) ? pBaseLayout : (pBaseLayout = new BaseLayoutElements());
	}
	
	public ParserRule getBaseLayoutRule() {
		return getBaseLayoutAccess().getRule();
	}

	//enum LayoutStyle:
	//	FILL="fill" | WRAP="wrap" | FILL_WRAP="fill&wrap" | WRAP_FILL="wrap&fill";
	public LayoutStyleElements getLayoutStyleAccess() {
		return (unknownRuleLayoutStyle != null) ? unknownRuleLayoutStyle : (unknownRuleLayoutStyle = new LayoutStyleElements());
	}
	
	public EnumRule getLayoutStyleRule() {
		return getLayoutStyleAccess().getRule();
	}

	//AbsoluteLayout:
	//	"absolutelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
	public AbsoluteLayoutElements getAbsoluteLayoutAccess() {
		return (pAbsoluteLayout != null) ? pAbsoluteLayout : (pAbsoluteLayout = new AbsoluteLayoutElements());
	}
	
	public ParserRule getAbsoluteLayoutRule() {
		return getAbsoluteLayoutAccess().getRule();
	}

	//LinearLayout:
	//	"linearlayout" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" elements+=UIElement*
	//	"}";
	public LinearLayoutElements getLinearLayoutAccess() {
		return (pLinearLayout != null) ? pLinearLayout : (pLinearLayout = new LinearLayoutElements());
	}
	
	public ParserRule getLinearLayoutRule() {
		return getLinearLayoutAccess().getRule();
	}

	//FrameLayout:
	//	"framelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
	public FrameLayoutElements getFrameLayoutAccess() {
		return (pFrameLayout != null) ? pFrameLayout : (pFrameLayout = new FrameLayoutElements());
	}
	
	public ParserRule getFrameLayoutRule() {
		return getFrameLayoutAccess().getRule();
	}

	//RelativeLayout:
	//	"relativelayout" name=ID? layoutStyle=LayoutStyle "{" elements+=UIElement* "}";
	public RelativeLayoutElements getRelativeLayoutAccess() {
		return (pRelativeLayout != null) ? pRelativeLayout : (pRelativeLayout = new RelativeLayoutElements());
	}
	
	public ParserRule getRelativeLayoutRule() {
		return getRelativeLayoutAccess().getRule();
	}

	//Widget:
	//	TextView | EditText | Button | ListView | Spinner | RadioGroup | CheckBox | RatingBar | ToggleButton;
	public WidgetElements getWidgetAccess() {
		return (pWidget != null) ? pWidget : (pWidget = new WidgetElements());
	}
	
	public ParserRule getWidgetRule() {
		return getWidgetAccess().getRule();
	}

	//TextView:
	//	"textview" name=ID? text=STRING layoutStyle=LayoutStyle;
	public TextViewElements getTextViewAccess() {
		return (pTextView != null) ? pTextView : (pTextView = new TextViewElements());
	}
	
	public ParserRule getTextViewRule() {
		return getTextViewAccess().getRule();
	}

	//EditText:
	//	"edittext" name=ID? text=STRING layoutStyle=LayoutStyle;
	public EditTextElements getEditTextAccess() {
		return (pEditText != null) ? pEditText : (pEditText = new EditTextElements());
	}
	
	public ParserRule getEditTextRule() {
		return getEditTextAccess().getRule();
	}

	//Button:
	//	"button" name=ID? text=STRING layoutStyle=LayoutStyle;
	public ButtonElements getButtonAccess() {
		return (pButton != null) ? pButton : (pButton = new ButtonElements());
	}
	
	public ParserRule getButtonRule() {
		return getButtonAccess().getRule();
	}

	//ListView:
	//	"listview" name=ID layoutStyle=LayoutStyle "{" ("entries" entries=[ArrayResource|QualifiedName])? ("listitem"
	//	layout=[Layout|QualifiedName])? "}";
	public ListViewElements getListViewAccess() {
		return (pListView != null) ? pListView : (pListView = new ListViewElements());
	}
	
	public ParserRule getListViewRule() {
		return getListViewAccess().getRule();
	}

	//Spinner:
	//	"spinner" name=ID? ("entries" entries=[Resource|QualifiedName])? layoutStyle=LayoutStyle;
	public SpinnerElements getSpinnerAccess() {
		return (pSpinner != null) ? pSpinner : (pSpinner = new SpinnerElements());
	}
	
	public ParserRule getSpinnerRule() {
		return getSpinnerAccess().getRule();
	}

	//CheckBox:
	//	"checkbox" name=ID? text=STRING layoutStyle=LayoutStyle;
	public CheckBoxElements getCheckBoxAccess() {
		return (pCheckBox != null) ? pCheckBox : (pCheckBox = new CheckBoxElements());
	}
	
	public ParserRule getCheckBoxRule() {
		return getCheckBoxAccess().getRule();
	}

	//RadioGroup:
	//	"radiogroup" name=ID? (orientation?="horizontal" | "vertical")? layoutStyle=LayoutStyle "{" radiobuttons+=RadioButton+
	//	"}";
	public RadioGroupElements getRadioGroupAccess() {
		return (pRadioGroup != null) ? pRadioGroup : (pRadioGroup = new RadioGroupElements());
	}
	
	public ParserRule getRadioGroupRule() {
		return getRadioGroupAccess().getRule();
	}

	//RatingBar:
	//	"ratingbar" name=ID? numStars=INT layoutStyle=LayoutStyle;
	public RatingBarElements getRatingBarAccess() {
		return (pRatingBar != null) ? pRatingBar : (pRatingBar = new RatingBarElements());
	}
	
	public ParserRule getRatingBarRule() {
		return getRatingBarAccess().getRule();
	}

	//ToggleButton:
	//	"togglebutton" name=ID? "textOn" textOn=STRING "textOff" textOff=STRING layoutStyle=LayoutStyle;
	public ToggleButtonElements getToggleButtonAccess() {
		return (pToggleButton != null) ? pToggleButton : (pToggleButton = new ToggleButtonElements());
	}
	
	public ParserRule getToggleButtonRule() {
		return getToggleButtonAccess().getRule();
	}

	//RadioButton:
	//	"radiobutton" name=ID? text=STRING layoutStyle=LayoutStyle;
	public RadioButtonElements getRadioButtonAccess() {
		return (pRadioButton != null) ? pRadioButton : (pRadioButton = new RadioButtonElements());
	}
	
	public ParserRule getRadioButtonRule() {
		return getRadioButtonAccess().getRule();
	}

	//PreferenceScreen:
	//	"preferencescreen" name=ID title=STRING "{" "}";
	public PreferenceScreenElements getPreferenceScreenAccess() {
		return (pPreferenceScreen != null) ? pPreferenceScreen : (pPreferenceScreen = new PreferenceScreenElements());
	}
	
	public ParserRule getPreferenceScreenRule() {
		return getPreferenceScreenAccess().getRule();
	}

	/// * End of AndroGuiModelRoot and gui model elements * / / * AndroRes ModelRoot and model elements * / AndroResModelRoot:
	//	"resources" name=ID "{" resources+=Resource* "}";
	public AndroResModelRootElements getAndroResModelRootAccess() {
		return (pAndroResModelRoot != null) ? pAndroResModelRoot : (pAndroResModelRoot = new AndroResModelRootElements());
	}
	
	public ParserRule getAndroResModelRootRule() {
		return getAndroResModelRootAccess().getRule();
	}

	//Resource:
	//	StringResource | IntegerResource | BooleanResource | ColorResource | DimensionResource | ArrayResource |
	//	DrawableResource;
	public ResourceElements getResourceAccess() {
		return (pResource != null) ? pResource : (pResource = new ResourceElements());
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//StringResource:
	//	name=ID "=" value=STRING;
	public StringResourceElements getStringResourceAccess() {
		return (pStringResource != null) ? pStringResource : (pStringResource = new StringResourceElements());
	}
	
	public ParserRule getStringResourceRule() {
		return getStringResourceAccess().getRule();
	}

	//IntegerResource:
	//	name=ID "=" value=INT;
	public IntegerResourceElements getIntegerResourceAccess() {
		return (pIntegerResource != null) ? pIntegerResource : (pIntegerResource = new IntegerResourceElements());
	}
	
	public ParserRule getIntegerResourceRule() {
		return getIntegerResourceAccess().getRule();
	}

	//BooleanResource:
	//	name=ID "=" value=BOOL;
	public BooleanResourceElements getBooleanResourceAccess() {
		return (pBooleanResource != null) ? pBooleanResource : (pBooleanResource = new BooleanResourceElements());
	}
	
	public ParserRule getBooleanResourceRule() {
		return getBooleanResourceAccess().getRule();
	}

	//ColorResource:
	//	name=ID "=" value=HEX_COLOR;
	public ColorResourceElements getColorResourceAccess() {
		return (pColorResource != null) ? pColorResource : (pColorResource = new ColorResourceElements());
	}
	
	public ParserRule getColorResourceRule() {
		return getColorResourceAccess().getRule();
	}

	//DimensionResource:
	//	name=ID "=" value=DimensionValue;
	public DimensionResourceElements getDimensionResourceAccess() {
		return (pDimensionResource != null) ? pDimensionResource : (pDimensionResource = new DimensionResourceElements());
	}
	
	public ParserRule getDimensionResourceRule() {
		return getDimensionResourceAccess().getRule();
	}

	//ArrayResource:
	//	IntegerArrayResource | StringArrayResource;
	public ArrayResourceElements getArrayResourceAccess() {
		return (pArrayResource != null) ? pArrayResource : (pArrayResource = new ArrayResourceElements());
	}
	
	public ParserRule getArrayResourceRule() {
		return getArrayResourceAccess().getRule();
	}

	//IntegerArrayResource:
	//	"intarray" name=ID "{" (entries+=IntegerArrayEntry ("," entries+=IntegerArrayEntry)*) "}";
	public IntegerArrayResourceElements getIntegerArrayResourceAccess() {
		return (pIntegerArrayResource != null) ? pIntegerArrayResource : (pIntegerArrayResource = new IntegerArrayResourceElements());
	}
	
	public ParserRule getIntegerArrayResourceRule() {
		return getIntegerArrayResourceAccess().getRule();
	}

	//IntegerArrayEntry:
	//	(name=ID "=")? value=INT;
	public IntegerArrayEntryElements getIntegerArrayEntryAccess() {
		return (pIntegerArrayEntry != null) ? pIntegerArrayEntry : (pIntegerArrayEntry = new IntegerArrayEntryElements());
	}
	
	public ParserRule getIntegerArrayEntryRule() {
		return getIntegerArrayEntryAccess().getRule();
	}

	//StringArrayResource:
	//	"stringarray" name=ID "{" (entries+=StringArrayEntry ("," entries+=StringArrayEntry)*) "}";
	public StringArrayResourceElements getStringArrayResourceAccess() {
		return (pStringArrayResource != null) ? pStringArrayResource : (pStringArrayResource = new StringArrayResourceElements());
	}
	
	public ParserRule getStringArrayResourceRule() {
		return getStringArrayResourceAccess().getRule();
	}

	//StringArrayEntry:
	//	(name=ID "=")? value=STRING;
	public StringArrayEntryElements getStringArrayEntryAccess() {
		return (pStringArrayEntry != null) ? pStringArrayEntry : (pStringArrayEntry = new StringArrayEntryElements());
	}
	
	public ParserRule getStringArrayEntryRule() {
		return getStringArrayEntryAccess().getRule();
	}

	//DrawableResource:
	//	BitmapDrawableResource | TransitionDrawableResource;
	public DrawableResourceElements getDrawableResourceAccess() {
		return (pDrawableResource != null) ? pDrawableResource : (pDrawableResource = new DrawableResourceElements());
	}
	
	public ParserRule getDrawableResourceRule() {
		return getDrawableResourceAccess().getRule();
	}

	//BitmapDrawableResource:
	//	name=ID "=" filename=ID;
	public BitmapDrawableResourceElements getBitmapDrawableResourceAccess() {
		return (pBitmapDrawableResource != null) ? pBitmapDrawableResource : (pBitmapDrawableResource = new BitmapDrawableResourceElements());
	}
	
	public ParserRule getBitmapDrawableResourceRule() {
		return getBitmapDrawableResourceAccess().getRule();
	}

	//TransitionDrawableResource:
	//	name=ID from=[BitmapDrawableResource] "<->" to=[BitmapDrawableResource];
	public TransitionDrawableResourceElements getTransitionDrawableResourceAccess() {
		return (pTransitionDrawableResource != null) ? pTransitionDrawableResource : (pTransitionDrawableResource = new TransitionDrawableResourceElements());
	}
	
	public ParserRule getTransitionDrawableResourceRule() {
		return getTransitionDrawableResourceAccess().getRule();
	}

	//DimensionValue:
	//	FLOAT ("dp" | "sp" | "pt" | "px" | "mm" | "in");
	public DimensionValueElements getDimensionValueAccess() {
		return (pDimensionValue != null) ? pDimensionValue : (pDimensionValue = new DimensionValueElements());
	}
	
	public ParserRule getDimensionValueRule() {
		return getDimensionValueAccess().getRule();
	}

	//BOOL:
	//	"YES" | "NO";
	public BOOLElements getBOOLAccess() {
		return (pBOOL != null) ? pBOOL : (pBOOL = new BOOLElements());
	}
	
	public ParserRule getBOOLRule() {
		return getBOOLAccess().getRule();
	}

	//FLOAT:
	//	INT ("." INT)?;
	public FLOATElements getFLOATAccess() {
		return (pFLOAT != null) ? pFLOAT : (pFLOAT = new FLOATElements());
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}

	/// * End of AndroResModelRoot and resource model elements * / terminal HEX_COLOR:
	//	"#" ("0".."9" | "A".."F" | "a".."f") ("0".."9" | "A".."F" | "a".."f") ("0".."9" | "A".."F" | "a".."f") ("0".."9" |
	//	"A".."F" | "a".."f") ("0".."9" | "A".."F" | "a".."f") ("0".."9" | "A".."F" | "a".."f") (("0".."9" | "A".."F" |
	//	"a".."f") ("0".."9" | "A".."F" | "a".."f"))?;
	public TerminalRule getHEX_COLORRule() {
		return (tHEX_COLOR != null) ? tHEX_COLOR : (tHEX_COLOR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEX_COLOR"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
